Before:
  call system('rm -rf test/output/*')

  let plugin_root = 'test/output/myplugin'

  function! Assert_installation(plugin_root, namespace) abort
    let l:installed_file = a:plugin_root . '/autoload/' . a:namespace . '/tree.vim'
    let l:prefix = substitute(a:namespace, '[/\\]', '#', 'g')
    let l:expected_line = '\Vfunction! ' . l:prefix . '#tree#new(provider) abort'

    Assert
    \   filereadable(l:installed_file),
    \   'File "' . l:installed_file . '" not installed'

    let l:lines = readfile(l:installed_file)

    Assert
    \   len(filter(l:lines, {i, l -> l =~# l:expected_line})) > 0,
    \   'Autoload prefix not set correctly in "' . l:installed_file . '"'
  endfunction

After:
  unlet! plugin_root
  unlet! namespace
  delfunction Assert_installation

Execute(Test install):
  call mkdir(plugin_root, 'p')
  let namespace = fnamemodify(plugin_root, ':t')

  exec 'YggdrasilPlant -plugin_dir=' . plugin_root

  call Assert_installation(plugin_root, namespace)

Execute(Test install with custom prefix):
  call mkdir(plugin_root, 'p')
  let namespace = 'my/prefix'

  exec 'YggdrasilPlant -plugin_dir=' . plugin_root . ' -namespace=' . namespace

  call Assert_installation(plugin_root, namespace)

Execute(Test double loading):
  unlet g:vim_yggdrasil_plugin_loaded
  source plugin/yggdrasil.vim

  AssertEqual 1, g:vim_yggdrasil_plugin_loaded

  source plugin/yggdrasil.vim

  AssertEqual 1, g:vim_yggdrasil_plugin_loaded

Execute(Test exception on bad plugin root):
  AssertThrows YggdrasilPlant -plugin_dir=test/output/myplugin
  AssertEqual 'Yggdrasil: cannot read target plugin directory', g:vader_exception
